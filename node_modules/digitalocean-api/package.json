{
  "name": "digitalocean-api",
  "version": "0.1.1",
  "author": {
    "name": "Matěj Šimek",
    "email": "email@matejsimek.cz",
    "url": "www.matejsimek.cz"
  },
  "description": "DigitalOcean API wrapper",
  "contributors": [
    {
      "name": "Ryan Sullivan",
      "email": "ryan@toptiertech.com"
    },
    {
      "name": "Eric Vicenti",
      "email": "ericvicenti@gmail.com"
    },
    {
      "name": "Manuel Stofer",
      "email": "manuel@takimata.ch"
    },
    {
      "name": "Pahan Sarathchandra",
      "email": "pahan123@gmail.com"
    }
  ],
  "keywords": [
    "digitalocean",
    "digitalocean-api"
  ],
  "homepage": "https://github.com/enzy/digitalocean-api",
  "repository": {
    "type": "git",
    "url": "https://github.com/enzy/digitalocean-api.git"
  },
  "main": "./lib/digitalocean.js",
  "engines": {
    "node": ">=0.8.0"
  },
  "dependencies": {
    "xtend": "2.x",
    "request": "2.x"
  },
  "devDependencies": {
    "mocha": "latest",
    "grunt": "~0.4.2",
    "grunt-jsdoc": "~0.5.1"
  },
  "readme": "# digitalocean-api <img align=\"right\" src=\"https://david-dm.org/enzy/digitalocean-api.png\"><img align=\"right\" src=\"https://badge.fury.io/js/digitalocean-api.png\">\n\nThe digitalocean-api is a module that allows you to communicate with the [DigitalOcean API](https://www.digitalocean.com/api) from node.js\n\n## Installation\n\nThis module is published in NPM:\n\n```\nnpm install digitalocean-api --save\n```\n\nThe `--save` tells NPM to automatically add it to your `package.json` file\n\n## Usage\n\n```js\n// Import a module\nvar DigitalOceanAPI = require('digitalocean-api');\n// Create an instance with your API credentials\nvar api = new DigitalOceanAPI('client_id', 'api_key');\n\n// Get things done\napi.dropletGetAll(function(error, droplets){\n\tconsole.log(droplets);\n});\n\n```\n\n## Methods\n\nAll methods follow the [official API documentation](https://www.digitalocean.com/api).\n\nMore [detailed documentation](http://enzy.github.io/digitalocean-api/Digitalocean.html) generated from the source code is available.\n\nConvention for callback arguments: `callback(error, data)`\n\n### Droplets\n\n```js\ndropletGetAll(callback)\ndropletNew(name, sizeId, imageId, regionId, optionals, callback)\ndropletGet(id, callback)\ndropletReboot(id, callback)\ndropletPowerCycle(id, callback)\ndropletShutdown(id, callback)\ndropletPowerOff(id, callback)\ndropletPowerOn(id, callback)\ndropletPasswordReset(id, callback)\ndropletResize(id, sizeId, callback)\ndropletSnapshot(id, optionals, callback)\ndropletRestore(id, imageId, callback)\ndropletRebuild(id, imageId, callback)\ndropletRename(id, name, callback)\ndropletDestroy(id, callback)\n```\n\n### Regions\n\n```js\nregionGetAll(callback)\n```\n\n### Images\n\n```js\nimageGetAll(callback)\nimageGetGlobal(callback)\nimageGetMine(callback)\nimageGet(id, callback)\nimageDestroy(id, callback)\nimageTransfer(id, regionId, callback)\n```\n\n### SSH keys\n\n```js\nsshKeyGetAll(callback)\nsshKeyAdd(name, pubKey, callback)\nsshKeyGet(id, callback)\nsshKeyEdit(id, pubKey, callback)\nsshKeyDestroy(id, callback)\n```\n\n### Sizes\n\n```js\nsizeGetAll(callback)\n```\n\n### Domains\n\n```js\ndomainGetAll(callback)\ndomainNew(name, ipAddress, callback)\ndomainGet(id, callback)\ndomainDestroy(id, callback)\ndomainRecordGetAll(id, callback)\ndomainRecordNew(id, recordType, data, optionals, callback)\ndomainRecordGet(id, recordId, callback)\ndomainRecordEdit(id, recordId, recordType, data, optionals, callback)\ndomainRecordDestroy(id, recordId, callback)\n```\n\n### Events\n```js\neventGet(id, callback)\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/enzy/digitalocean-api/issues"
  },
  "_id": "digitalocean-api@0.1.1",
  "dist": {
    "shasum": "445a3f6440370e24fdde97ebdef45ba1e2e2d7f8"
  },
  "_from": "digitalocean-api@",
  "_resolved": "https://registry.npmjs.org/digitalocean-api/-/digitalocean-api-0.1.1.tgz"
}
